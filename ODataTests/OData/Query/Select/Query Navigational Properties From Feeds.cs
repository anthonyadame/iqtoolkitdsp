// <auto-generated>
//     This code was generated by a tool from a template stored in:
//     '..\odatasdkcodesamples\ODataValidationToolkit\4.0\ODataTestGen\TestTemplates\Query\Select\Query Navigational Properties From Feeds.tt'
//     Generation time: 12/08/2010 16:12:51
// </auto-generated>
	





namespace ODataGeneratedTests
{
    	
    using System;
    using System.Linq;
    using System.IO;
    using System.Data.Services;
    using System.Xml.Linq;
    using System.Net;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using System.Collections.Generic;
    using System.Text;
    using AtomPayloadAnalyzer;
    using System.Xml;
    
    [TestClass]
    public class QueryAllNavigationPropertiesFromFeeds
    {
        
        /// <summary>
        /// Query navigation property Products From Feed Categories
        /// </summary>			
        [TestMethod]
        public void QueryProductsFromFeedCategories()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "Categories/Products";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


        /// <summary>
        /// Query navigation property Customer From Feed CustomerCustomerDemos
        /// </summary>			
        [TestMethod]
        public void QueryCustomerFromFeedCustomerCustomerDemos()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "CustomerCustomerDemos/Customer";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


        /// <summary>
        /// Query navigation property CustomerDemographics From Feed CustomerCustomerDemos
        /// </summary>			
        [TestMethod]
        public void QueryCustomerDemographicsFromFeedCustomerCustomerDemos()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "CustomerCustomerDemos/CustomerDemographics";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


        /// <summary>
        /// Query navigation property CustomerCustomerDemos From Feed CustomerDemographics
        /// </summary>			
        [TestMethod]
        public void QueryCustomerCustomerDemosFromFeedCustomerDemographics()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "CustomerDemographics/CustomerCustomerDemos";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


        /// <summary>
        /// Query navigation property CustomerCustomerDemos From Feed Customers
        /// </summary>			
        [TestMethod]
        public void QueryCustomerCustomerDemosFromFeedCustomers()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "Customers/CustomerCustomerDemos";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


        /// <summary>
        /// Query navigation property Orders From Feed Customers
        /// </summary>			
        [TestMethod]
        public void QueryOrdersFromFeedCustomers()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "Customers/Orders";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


        /// <summary>
        /// Query navigation property ReportsToEmployee From Feed Employees
        /// </summary>			
        [TestMethod]
        public void QueryReportsToEmployeeFromFeedEmployees()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "Employees/ReportsToEmployee";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


        /// <summary>
        /// Query navigation property EmployeeTerritories From Feed Employees
        /// </summary>			
        [TestMethod]
        public void QueryEmployeeTerritoriesFromFeedEmployees()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "Employees/EmployeeTerritories";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


        /// <summary>
        /// Query navigation property Orders From Feed Employees
        /// </summary>			
        [TestMethod]
        public void QueryOrdersFromFeedEmployees()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "Employees/Orders";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


        /// <summary>
        /// Query navigation property ReportsToChildren From Feed Employees
        /// </summary>			
        [TestMethod]
        public void QueryReportsToChildrenFromFeedEmployees()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "Employees/ReportsToChildren";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


        /// <summary>
        /// Query navigation property Employee From Feed EmployeeTerritories
        /// </summary>			
        [TestMethod]
        public void QueryEmployeeFromFeedEmployeeTerritories()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "EmployeeTerritories/Employee";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


        /// <summary>
        /// Query navigation property Territory From Feed EmployeeTerritories
        /// </summary>			
        [TestMethod]
        public void QueryTerritoryFromFeedEmployeeTerritories()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "EmployeeTerritories/Territory";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


        /// <summary>
        /// Query navigation property Order From Feed OrderDetails
        /// </summary>			
        [TestMethod]
        public void QueryOrderFromFeedOrderDetails()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "OrderDetails/Order";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


        /// <summary>
        /// Query navigation property Product From Feed OrderDetails
        /// </summary>			
        [TestMethod]
        public void QueryProductFromFeedOrderDetails()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "OrderDetails/Product";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


        /// <summary>
        /// Query navigation property Customer From Feed Orders
        /// </summary>			
        [TestMethod]
        public void QueryCustomerFromFeedOrders()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "Orders/Customer";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


        /// <summary>
        /// Query navigation property Employee From Feed Orders
        /// </summary>			
        [TestMethod]
        public void QueryEmployeeFromFeedOrders()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "Orders/Employee";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


        /// <summary>
        /// Query navigation property OrderDetails From Feed Orders
        /// </summary>			
        [TestMethod]
        public void QueryOrderDetailsFromFeedOrders()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "Orders/OrderDetails";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


        /// <summary>
        /// Query navigation property ShipViaShipper From Feed Orders
        /// </summary>			
        [TestMethod]
        public void QueryShipViaShipperFromFeedOrders()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "Orders/ShipViaShipper";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


        /// <summary>
        /// Query navigation property OrderDetails From Feed Products
        /// </summary>			
        [TestMethod]
        public void QueryOrderDetailsFromFeedProducts()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "Products/OrderDetails";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


        /// <summary>
        /// Query navigation property Territories From Feed Regions
        /// </summary>			
        [TestMethod]
        public void QueryTerritoriesFromFeedRegions()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "Regions/Territories";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


        /// <summary>
        /// Query navigation property ShipViaOrders From Feed Shippers
        /// </summary>			
        [TestMethod]
        public void QueryShipViaOrdersFromFeedShippers()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "Shippers/ShipViaOrders";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


        /// <summary>
        /// Query navigation property Products From Feed Suppliers
        /// </summary>			
        [TestMethod]
        public void QueryProductsFromFeedSuppliers()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "Suppliers/Products";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


        /// <summary>
        /// Query navigation property Region From Feed Territories
        /// </summary>			
        [TestMethod]
        public void QueryRegionFromFeedTerritories()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "Territories/Region";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


        /// <summary>
        /// Query navigation property EmployeeTerritories From Feed Territories
        /// </summary>			
        [TestMethod]
        public void QueryEmployeeTerritoriesFromFeedTerritories()
        {
            string strQuery =  WcfTestUtil.OdataServiceRoot  + "Territories/EmployeeTerritories";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(strQuery);
            HttpWebResponse response = null;
            try
            {
            	response = (HttpWebResponse)request.GetResponse();
            }
            catch(System.Net.WebException ex)
            {
            	Assert.AreEqual(HttpStatusCode.BadRequest, ((HttpWebResponse)ex.Response).StatusCode);	
            }
        }


    }
}
